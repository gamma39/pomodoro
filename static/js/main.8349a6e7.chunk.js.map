{"version":3,"sources":["components/alarm.wav","components/BreakModule.js","components/SessionModule.js","components/Timer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BreakModule","props","react_default","a","createElement","id","minID","onClick","index_es","icon","size","breakLength","maxID","SessionModule","sessionLength","Timer","value","src","soundfile","timeLeft","library","add","faArrowDown","faArrowUp","faPlay","faPause","faRedo","accurateInterval","require","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isSession","currentTime","timeRemaining","isPlaying","handleChange","bind","assertThisInitialized","handleClick","e","currentTarget","setState","play","document","getElementById","pause","_this2","alarm","timer","minutes","Math","floor","seconds","clear","console","log","className","components_BreakModule","components_SessionModule","components_Timer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8349a6e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm.793389e3.wav\";","import React from 'react'\r\nimport '../components/styles/BreakModule.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\n\r\nfunction BreakModule(props){\r\n    return(\r\n        <div id='break-div'>\r\n            <h3 id='break-label'>Break</h3>\r\n            <div id='break-container'>\r\n                <div id={props.minID} onClick={props.onClick}> \r\n                    <FontAwesomeIcon icon='arrow-down' size='1x' />\r\n                </div>\r\n                <h4 id=\"break-length\">{props.breakLength}</h4>\r\n                <div id={props.maxID} onClick={props.onClick}>\r\n                 <FontAwesomeIcon icon='arrow-up' size='1x'  />\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n            \r\n        \r\n    )\r\n    \r\n    \r\n}\r\n\r\nexport default BreakModule","import React from 'react'\r\nimport './styles/SessionModule.css'\r\nimport '../components/styles/BreakModule.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\n\r\nfunction SessionModule(props){\r\n    return(\r\n        <div id='break-div'>\r\n            <h3 id='session-label'>Session</h3>\r\n            <div id='break-container'>\r\n                <div id={props.minID} onClick={props.onClick}>\r\n                    <FontAwesomeIcon icon='arrow-down' size='1x' />\r\n                </div>\r\n                <h4 id=\"session-length\">{props.sessionLength}</h4>\r\n                <div id={props.maxID} onClick={props.onClick}>\r\n                    <FontAwesomeIcon icon='arrow-up' size='1x' />\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n            \r\n        \r\n    )\r\n    \r\n    \r\n}\r\n\r\nexport default SessionModule","import React from 'react'\r\nimport './styles/Timer.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport soundfile from './alarm.wav'\r\n\r\n\r\nfunction Timer(props){\r\n    return(\r\n        <div id=\"timer-container\">\r\n            <h4 id=\"timer-label\">{props.value}</h4>\r\n            <h1 id='time-left'><audio id='beep' src={soundfile} ></audio>{props.timeLeft}</h1>\r\n            <div id='controls'>\r\n                <div  id='start_stop' onClick={props.onClick}>\r\n                    <FontAwesomeIcon icon=\"play\" size='1x' />\r\n                    <FontAwesomeIcon icon=\"pause\" size='1x' />\r\n                    \r\n                </div>\r\n                <FontAwesomeIcon icon=\"redo\" size='1x' id='reset' onClick={props.onClick} />\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer","import React, { Component } from 'react';\nimport BreakModule from './components/BreakModule';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faArrowDown, faArrowUp, faPlay, faPause, faRedo } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\nimport SessionModule from './components/SessionModule';\nimport Timer from './components/Timer';\n\nlibrary.add(faArrowDown, faArrowUp, faPlay, faPause, faRedo)\nvar accurateInterval = require('accurate-interval')\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      value: 'Session',\n      isSession: true,\n      currentTime: '25:00',\n      timeRemaining: 1500,\n      isPlaying: false\n    }\n    \n    this.handleChange = this.handleChange.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n  }\n \n  \n  handleClick(e){\n    if(e.currentTarget.id === 'start_stop'){\n      this.setState({isPlaying: !this.state.isPlaying}, this.play)\n    }\n    \n    else if(e.currentTarget.id === 'reset'){\n      document.getElementById('beep').pause()\n      this.setState({\n        value: 'Session',\n        sessionLength: 25,\n        breakLength: 5,\n        isPlaying: false,\n        currentTime: \"25:00\",\n        timeRemaining: 1500\n\n      })\n    }\n    \n  }\n  play(){\n    let alarm = document.getElementById('beep')\n      \n      var timer = accurateInterval(() => {\n        if(this.state.isPlaying){\n        this.setState({timeRemaining: this.state.timeRemaining - 1})\n        let minutes = Math.floor(this.state.timeRemaining / 60)\n        let seconds = this.state.timeRemaining - (minutes * 60)\n        minutes = minutes < 10 ? '0' + minutes : minutes\n        seconds = seconds < 10 ? '0' + seconds : seconds\n        \n      \n        if(this.state.timeRemaining > 0){\n          this.setState({currentTime: minutes + ':' + seconds})\n        } \n        else if(this.state.timeRemaining === 0){\n          if(this.state.value === 'Session'){\n            this.setState({currentTime: minutes + ':' + seconds, value: \"Break\"})\n          }\n          else{\n            this.setState({currentTime: minutes + ':' + seconds, value: 'Session'})\n          }\n        }\n        else if(this.state.timeRemaining < 0){\n           \n          alarm.play()\n\n          if(this.state.value === 'Break'){\n            this.setState({\n              currentTime: this.state.breakLength + ':00',\n              timeRemaining: this.state.breakLength * 60,\n              \n            })\n          }\n          else if(this.state.value === 'Session'){\n            this.setState({\n              currentTime: this.state.sessionLength + ':00',\n              timeRemaining: this.state.sessionLength * 60,\n              \n            })\n          }\n        }\n         \n          \n        \n        \n        \n      }  \n      else{\n        timer.clear()\n      } \n      },1000)\n}\n \n  \n  handleChange(e){\n    const {id} = e.currentTarget\n    let value = this.state.value\n    if(!this.state.isPlaying ){\n      switch(id){\n        case 'break-increment':\n          if(this.state.breakLength < 60 && value === 'Session'){\n            this.setState({breakLength: this.state.breakLength + 1})\n          }\n          else if(this.state.breakLength < 60){\n            this.setState({\n              breakLength: this.state.breakLength + 1,\n              currentTime: this.state.breakLength + 1 + ':00',\n              timeRemaining: (this.state.breakLength + 1) * 60\n            })\n            if(this.state.breakLength < 9){\n              console.log('true')\n              this.setState({currentTime: '0' + (this.state.breakLength + 1) + ':00'})\n            }\n          }\n          break\n        case 'break-decrement':\n          if(this.state.breakLength !== 1 && value === 'Session'){\n            this.setState({breakLength: this.state.breakLength - 1})\n          }\n          else if(this.state.breakLength !== 1){\n            this.setState({\n              breakLength: this.state.breakLength - 1,\n              currentTime: this.state.breakLength - 1 + ':00',\n              timeRemaining: (this.state.breakLength - 1) * 60\n            })\n            if(this.state.breakLength < 11){\n              console.log('true')\n              this.setState({currentTime: '0' + (this.state.breakLength -1) + ':00'})\n            }\n          }\n          break\n        case 'session-increment':\n          if(this.state.sessionLength < 60 && value === 'Break'){\n            this.setState({sessionLength: this.state.sessionLength + 1})\n          }\n          else if(this.state.sessionLength < 60){\n            this.setState({\n              sessionLength: this.state.sessionLength + 1,\n              currentTime: this.state.sessionLength + 1 + ':00',\n              timeRemaining: (this.state.sessionLength + 1) * 60\n            })\n            if(this.state.sessionLength < 9){\n              console.log('true')\n              this.setState({currentTime: '0' + (this.state.sessionLength + 1) + ':00'})\n            }\n          }\n          break\n        case 'session-decrement':\n          if(this.state.sessionLength !== 1 && value === 'Break'){\n            this.setState({sessionLength: this.state.sessionLength - 1})\n            \n          }\n          else if(this.state.sessionLength !== 1){\n            this.setState({\n              sessionLength: this.state.sessionLength - 1,\n              currentTime: this.state.sessionLength - 1 + ':00',\n              timeRemaining: (this.state.sessionLength - 1) * 60\n            })\n            if(this.state.sessionLength < 11){\n              console.log('true')\n              this.setState({currentTime: '0' + (this.state.sessionLength -1) + ':00'})\n            }\n          }\n\n          break\n        default:\n          break\n          \n\n      }\n      \n    }\n  }\n  \n      \n    \n  \n  render() {\n    return (\n      <div className=\"App noSelect\">\n        <h1 id=\"title\">Pomodoro</h1>\n        <div id='container1'>\n          <BreakModule maxID=\"break-increment\" minID=\"break-decrement\" breakLength={this.state.breakLength} onClick={this.handleChange}/>\n          <SessionModule maxID=\"session-increment\" minID=\"session-decrement\" sessionLength={this.state.sessionLength} onClick={this.handleChange}/>\n        </div>\n          <div id=\"container2\">\n            <Timer value={this.state.value} timeLeft={this.state.currentTime} onClick={this.handleClick}/>\n          </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css'\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}